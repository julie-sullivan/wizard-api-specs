{
  "openapi": "3.0.0",
  "info": {
    "description": "ISA-InterMine Data import wizard prototype spec",
    "version": "0.1.0",
    "title": "InterMine Import Wizard API Specs - working draft",
    "contact": {
      "email": "info@intermine.org",
      "url": "http://www.intermine.org"
    },
    "license": {
      "name": "LGPL 2.1",
      "url": "https://github.com/intermine/intermine/blob/dev/LICENSE"
    }
  },
  "paths": {
    "/mine/config": {
      "post": {
        "summary": "Start new mine build config entry",
        "description": "Create a new entry for a set of uploaded files and associated configs to launch a new mine. This can allocate an id which all file uploads will be associated with.",
        "operationId": "setMineConfig",
        "requestBody": {
          "required": false,
          "description": "Config to set for Mine",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MineConfig"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/MineConfig"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New mineconfig instance created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "123e4567-e89b-12d3-a456-556642440000"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string",
                  "example": "123e4567-e89b-12d3-a456-556642440000"
                }
              }
            }
          }
        }
      }
    },
    "/mine/config/{mineId}": {
      "get": {
        "summary": "Get mine config",
        "description": "return configured details (if any) for a given mine id.",
        "operationId": "getMineConfig",
        "parameters": [{
          "name": "mineId",
          "in": "path",
          "description": "ID of mineconfig to fetch",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-e89b-12d3-a456-556642440000"
          }
        }],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MineConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MineConfig"
                }
              }
            }
          }
        }
      }
    },

    "/file/properties/detect": {
      "post": {
        "summary": "Return identified file type",
        "description": "",
        "operationId": "detectFileProperties",
        "responses": {
          "200": {
            "description": "successfully detected file type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataFileProperties"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DataFileProperties"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataFile"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/DataFile"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/DataFile"
              }
            }
          },
          "description": "File or file snippet that needs to be identified.",
          "required": true
        }
      }
    },
    "/file/properties/save": {
      "post": {
        "summary": "Save file properties to a given InterMine pre-build config",
        "description": "Following on from `detectFileProperties`, we need to save a set of configs associated with a file. This can be run multiple times, as the user may upload an unknown number of files.",
        "operationId": "saveFileProperties",
        "responses": {
          "200": {
            "description": "successfully saved provided DataFileProperties details"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataFilePropertiesResponse"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/DataFilePropertiesResponse"
              }
            }
          },
          "description": "File or file snippet that needs to be identified.",
          "required": true
        }
      }
    },
    "/file/save": {
      "post": {
        "summary": "Upload File that has properties mapped",
        "description": "Finalise upload for a file that has already had its properties detected and mapped.",
        "responses": {
          "200": {
            "description": "successfully saved provided File"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataFile"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/DataFile"
              }
            }
          },
          "description": "File or file snippet that needs to be identified.",
          "required": true
        }
      }
    },
    "/file/delete": {
      "post": {
        "summary": "Delete file and associated properties",
        "description": "Remove uploaded file and any properties detected or mapped by user.",
        "responses": {
          "200": {
            "description": "File and properties deleted"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "example": "humanfile3.gff"
              }
            },
            "application/xml": {
              "schema": {
                "type": "string",
                "example": "humanfile3.gff"
              }
            }
          },
          "required": true
        }
      }
    },
    "/mine/dataTools/{mineId}": {
      "get": {
        "summary": "Retrieve set of tools suitable for the given mine",
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataTool"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataTool"
                  }
                }
              }
            }
          }
        },
        "parameters": [{
          "name": "mineId",
          "in": "path",
          "description": "ID of mineconfig to fetch tools for",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-e89b-12d3-a456-556642440000"
          }
        }]
      }
    },
    "/mine/dataTool/{mineId}": {
      "post": {
        "summary": "Set tools to be used for the given mine",
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataToolResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DataToolResponse"
                }
              }
            }
          }
        },
        "parameters": [{
          "name": "mineId",
          "in": "path",
          "description": "ID of mineconfig to set tools for",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-e89b-12d3-a456-556642440000"
          }
        }]
      }
    },
    "/build/trigger": {
      "post": {
        "summary": "Begin build of specified mine",
        "responses": {
          "200": {
            "description": "build triggered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataBuild"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DataBuild"
                }
              }
            }
          }
        }
      }
    },
    "/build/status": {
      "get": {
        "summary": "Retrieve build status of a given mine",
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataBuildStatus"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DataBuildStatus"
                }
              }
            }
          }
        }
      }
    },
    "/supplementaryDataSources": {
      "get": {
        "summary": "Get list of possible supplementary data sources for this mine config",
        "description": "Returns a list of possible external data sources to add to this mine, e.g. GO terms, publications, etc.",
        "operationId": "getSupplementaryDataSources",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SupplementaryDataSource"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SupplementaryDataSource"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "set list of desired supplementary data sources",
        "description": "Saves a list of possible external data sources to add to this mine, e.g. GO terms, publications, etc.",
        "operationId": "setSupplementaryDataSources",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SupplementaryDataSourcesResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SupplementaryDataSourcesResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "servers": [{
      "url": "https://wizard.intermine.org/v1"
    },
    {
      "url": "http://wizard.intermine.org/v1"
    }
  ],
  "components": {
    "schemas": {
      "MineConfig": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "mineName": {
            "type": "string",
            "example": "MyFirstMine"
          },
          "privacy": {
            "type": "string",
            "enum": [
              "unlisted",
              "public"
            ],
            "example": "unlisted"
          },
          "licence": {
            "type": "string",
            "example": "CC0"
          }
        },
        "xml": {
          "name": "MineConfig"
        }
      },
      "DataFile": {
        "type": "object",
        "required": [
          "name",
          "fileContents",
          "fileFormat",
          "organism"
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "humanfile.gff"
          },
          "fileContents": {
            "type": "string"
          },
          "fileFormat": {
            "type": "string",
            "enum": [
              "fasta",
              "gff",
              "tab",
              "csv"
            ],
            "example": "fasta"
          },
          "organism": {
            "allOf": [{
              "$ref": "#/components/schemas/Organism"
            }]
          }
        },
        "xml": {
          "name": "DataFile"
        }
      },
      "DataFileProperties": {
        "type": "object",
        "required": [
          "name",
          "fileFormat",
          "rowCount",
          "organism",
          "fileID",
          "mineID"
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "humanfile.gff"
          },
          "fileFormat": {
            "type": "string",
            "example": "gff"
          },
          "rowCount": {
            "type": "integer",
            "example": 22395
          },
          "filePreview": {
            "type": "object",
            "properties": {
              "headerRow": {
                "type": "array",
                "items": {
                  "type": "string",
                  "example": [
                    "seqID",
                    "source",
                    "type",
                    "start",
                    "end",
                    "score",
                    "strand",
                    "phase"
                  ]
                }
              },
              "rows": {
                "type": "array",
                "items": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": [
                      "NC_000001.11",
                      "RefSeq",
                      "region  1",
                      "248956422",
                      ".",
                      "+",
                      ".",
                      "ID=id0;Dbxref=taxon:9606;Name=1;chromosome=1;gbkey=Src;genome=chromosome;mol_type=genomic DNA"
                    ]
                  }
                }
              }
            }
          },
          "questions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataFilePropertiesQuestion"
            }
          },
          "fileID": {
            "type": "integer"
          },
          "mineID": {
            "type": "string"
          }
        },
        "xml": {
          "name": "DataFileProperties"
        }
      },
      "Organism": {
        "type": "object",
        "required": [
          "taxonID"
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "Homo sapiens"
          },
          "taxonID": {
            "type": "integer",
            "example": "9606"
          }
        }
      },
      "DataFilePropertiesQuestion": {
        "type": "object",
        "required": [
          "fileID",
          "mineID",
          "question"
        ],
        "properties": {
          "fileId": {
            "type": "string"
          },
          "mineId": {
            "type": "string"
          },
          "question": {
            "type": "object",
            "properties": {
              "questionType": {
                "type": "string",
                "example": "nucleotideOrProtein"
              },
              "questionWording": {
                "type": "string",
                "description": "Human-readable question aimed at a wizard user.",
                "example": "Does this file contain nucleotides or proteins?"
              },
              "possibleAnswers": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DataFilePropertiesAnswerOption"
                }
              }
            }
          }
        },
        "xml": {
          "name": "DataFilePropertiesQuestion"
        }
      },
      "DataFilePropertiesAnswerOption": {
        "type": "object",
        "required": [
          "fileID",
          "mineID"
        ],
        "properties": {
          "fileId": {
            "type": "string"
          },
          "mineId": {
            "type": "string"
          },
          "options": {
            "type": "array",
            "description": "Array of possible answers the user can choose from.",
            "example": [
              {"answerID" : "nucleotides", "answerWording":"Nucleotides"},
              {"answerID" : "proteins", "answerWording":"Proteins"}],
            "items": {
              "type": "object",
              "properties": {
                "answerID": {
                  "type": "string",
                  "example": "nucleotide",
                },
                "answerWording": {
                  "type": "string",
                  "example": "Nucleotide"
                }
              }
            },
          },
          "defaultAnswer": {
            "type": "string",
            "example": "answerID of one of the questions above"
          }
        },
        "xml": {
          "name": "DataFilePropertiesAnswerOption"
        }
      },
      "DataFilePropertiesResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "required": [
            "fileID",
            "mineID"
          ],
          "properties": {
            "answers": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "answerID": {
                    "type": "string",
                    "example": "GeneID"
                  },
                  "answerChosen": {
                    "type": "string",
                    "nullable": true,
                    "example": "primaryIdentifier"
                  }
                }
              }
            },
            "fileID": {
              "type": "integer"
            },
            "mineID": {
              "type": "string"
            }
          },
          "xml": {
            "name": "DataFilePropertiesResponse"
          }
        }
      },
      "User": {
        "type": "object",
        "required": [
          "email"
        ],
        "properties": {
          "email": {
            "type": "string",
            "example": "alice@mylab.com"
          },
          "password": {
            "type": "string",
            "format": "password"
          }
        }
      },
      "SupplementaryDataSource": {
        "type": "object",
        "required": [
          "label",
          "description",
          "url"
        ],
        "properties": {
          "label": {
            "type": "string",
            "example": "NCBI Taxon ID information"
          },
          "description": {
            "type": "string",
            "example": "Will populate empty fields for Organism, e.g. name (Based on NCBI taxon ID)"
          },
          "url": {
            "type": "string",
            "example": "https://intermine.readthedocs.io/en/latest/database/data-sources/library/organism/"
          }
        },
        "xml": {
          "name": "SupplementaryDataSources"
        }
      },
      "SupplementaryDataSourcesResponse": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "example": [
          "GOAnnotations",
          "PubMed"
        ]
      },
      "DataBuild": {
        "type": "object",
        "required": [
          "mineConfigId"
        ],
        "properties": {
          "mineConfigId": {
            "type": "integer"
          }
        }
      },
      "DataBuildStatus": {
        "type": "object",
        "required": [
          "buildStatus"
        ],
        "properties": {
          "buildStatus": {
            "type": "string",
            "enum": [
              "complete",
              "running",
              "errored",
              "not_yet_started"
            ]
          },
          "errorDetails": {
            "type": "string"
          }
        }
      },
      "DataTool": {
        "type": "object",
        "properties": {
          "toolId": {
            "type": "integer"
          },
          "toolName": {
            "type": "string",
            "example": "ProtVista"
          },
          "toolDescription": {
            "type": "string",
            "example": "Protein feature browser"
          },
          "toolPreview": {
            "type": "string",
            "example": "http://toolregistry.intermine.org/protvista.png"
          },
          "requiredClasses": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "Gene",
              "Gene.homologues.homologue"
            ]
          }
        }
      },
      "DataToolResponse": {
        "type": "array",
        "items": {
          "type": "integer"
        },
        "description": "ids of tools to use in this mine."
      }
    }
  }
}
